import * as Updates from 'expo-updates';
import * as Notifications from 'expo-notifications';

export const checkForUpdates = async () => {
  try {
    const update = await Updates.checkForUpdateAsync();
    
    if (update.isAvailable) {
      // Notificar o usuário sobre a nova atualização
      await Notifications.scheduleNotificationAsync({
        content: {
          title: "Nova atualização disponível!",
          body: "Uma nova versão do aplicativo está disponível. Clique para atualizar.",
        },
        trigger: null, // Enviar imediatamente
      });

      // Iniciar o download da atualização
      await Updates.fetchUpdateAsync();
      
      // Reiniciar o aplicativo com a nova versão
      await Updates.reloadAsync();
    }
  } catch (error) {
    console.error('Erro ao verificar atualizações:', error);
  }
};

export const initializeUpdateService = async () => {
  try {
    // Verificar atualizações ao iniciar o app
    await checkForUpdates();
    
    // Configurar verificação periódica (a cada 24 horas)
    setInterval(checkForUpdates, 24 * 60 * 60 * 1000);
  } catch (error) {
    console.error('Erro ao inicializar serviço de atualizações:', error);
  }
}; 